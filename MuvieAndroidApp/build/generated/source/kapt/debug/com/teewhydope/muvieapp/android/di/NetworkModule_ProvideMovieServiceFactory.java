// Generated by Dagger (https://dagger.dev).
package com.teewhydope.muvieapp.android.di;

import com.teewhydope.muvieapp.datasource.network.MovieService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.ktor.client.HttpClient;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideMovieServiceFactory implements Factory<MovieService> {
  private final Provider<HttpClient> httpClientProvider;

  public NetworkModule_ProvideMovieServiceFactory(Provider<HttpClient> httpClientProvider) {
    this.httpClientProvider = httpClientProvider;
  }

  @Override
  public MovieService get() {
    return provideMovieService(httpClientProvider.get());
  }

  public static NetworkModule_ProvideMovieServiceFactory create(
      Provider<HttpClient> httpClientProvider) {
    return new NetworkModule_ProvideMovieServiceFactory(httpClientProvider);
  }

  public static MovieService provideMovieService(HttpClient httpClient) {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideMovieService(httpClient));
  }
}

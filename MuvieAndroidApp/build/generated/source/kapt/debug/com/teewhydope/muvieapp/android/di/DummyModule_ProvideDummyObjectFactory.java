// Generated by Dagger (https://dagger.dev).
package com.teewhydope.muvieapp.android.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DummyModule_ProvideDummyObjectFactory implements Factory<Dummy> {
  private final Provider<Integer> ageProvider;

  private final Provider<String> nameProvider;

  public DummyModule_ProvideDummyObjectFactory(Provider<Integer> ageProvider,
      Provider<String> nameProvider) {
    this.ageProvider = ageProvider;
    this.nameProvider = nameProvider;
  }

  @Override
  public Dummy get() {
    return provideDummyObject(ageProvider.get(), nameProvider.get());
  }

  public static DummyModule_ProvideDummyObjectFactory create(Provider<Integer> ageProvider,
      Provider<String> nameProvider) {
    return new DummyModule_ProvideDummyObjectFactory(ageProvider, nameProvider);
  }

  public static Dummy provideDummyObject(int age, String name) {
    return Preconditions.checkNotNullFromProvides(DummyModule.INSTANCE.provideDummyObject(age, name));
  }
}
